[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
description = "{{cookiecutter.short_description}}"
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" },
]
urls = { "Respository" = "https://github.com/{{cookiecutter.__github_repo}}" }
license = { file = "LICENSE" }
readme = "README.md"
version = "{{cookiecutter.version}}"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]

requires-python = ">=3.10"
dependencies = []

[project.optional-dependencies]
dev = ["pre-commit", "ruff", "tox", "tox-pyenv"]
tests = ["pytest", "pytest-clarity", "pytest-ruff", "pytest-mypy"]

[project.scripts]
hook = "{{cookiecutter.project_slug}}.hook:main"

[tool.setuptools]
packages = ["{{cookiecutter.project_slug}}"]

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # Pycodestyle
    "W",
    "UP",   # pyupgrade
    "FURB", # refurb
    "S",    # flake8-bandit
    "C4",   # flake8-comprehensions
    "G",    # flake8-logging-format
    "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "PTH",  # flake8-use-pathlib
    "TID252", # flake8-tidy-imports (relative-imports)
    "PERF", # Perflint
    "FLY",  # flynt
    "I",    # isort
    "RUF100", # Unneeded noqa
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--mypy --ruff"
filterwarnings = ["error"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
